{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio\\\\Desktop\\\\4\\xBA Carrera\\\\Ubicua\\\\lab3-ubicua\\\\client\\\\src\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport socket from './Socket'; // let messageList = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Messages(props) {\n  _s();\n\n  /*That array saves all current app messages*/\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"message_evt\", msgObject => {\n      setMessages([...messages, msgObject]);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [messages]);\n\n  function CheckUser() {\n    {\n      messages.map(message => {\n        if (message.name === props.name) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"MyMessageContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ExternalMessageContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this);\n        }\n      });\n    } // <div className=\"MyMessageContainer\">\n    //     {messages.map((msg) => {\n    //         msg.name !== props.name &&\n    //             <div className_=\"externalMessage\">\n    //                 {messages.map((messages, i) => <p key={i} >{messages.msg}</p>)}\n    //             </div>\n    //     })}\n    //     {messages.map((msg) => {\n    //         msg.name === props.name &&\n    //             <div className=\"myMessage\">\n    //                 {messages.map((messages, i) => <p key={i} >{messages.msg}</p>)}\n    //             </div>\n    //     })}\n    // </div>\n    // } else {\n    //     return (\n    //         <div className=\"ExternalMessageContainer\">\n    //             {messages.map((messages, i) => <div key={i} className=\"externalMessage\">{messages.msg}</div>)}\n    //         </div>\n    //     )\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MyMessageContainer\",\n    children: messages.map(msg => {\n      if (msg.name === props.name) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myMessage\",\n          children: messages.map(messages => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messages.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 57\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className_: \"externalMessage\",\n          children: messages.map(messages => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messages.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 57\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Sergio/Desktop/4ยบ Carrera/Ubicua/lab3-ubicua/client/src/components/Messages.js"],"names":["React","useState","useEffect","socket","Messages","props","messages","setMessages","on","msgObject","off","CheckUser","map","message","name","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC5B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACK,EAAP,CAAU,aAAV,EAA0BC,SAAD,IAAe;AACpCF,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,SAAd,CAAD,CAAX;AACH,KAFD;AAGA,WAAO,MAAM;AAAEN,MAAAA,MAAM,CAACO,GAAP;AAAc,KAA7B;AACH,GALQ,EAKN,CAACJ,QAAD,CALM,CAAT;;AAOA,WAASK,SAAT,GAAqB;AAEjB;AACIL,MAAAA,QAAQ,CAACM,GAAT,CAAcC,OAAD,IAAa;AACtB,YAAIA,OAAO,CAACC,IAAR,KAAiBT,KAAK,CAACS,IAA3B,EAAiC;AAC7B,8BACI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI;AAAA,wBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND,MAMO;AACH,8BACI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACI;AAAA,wBAAIF,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH;AACJ,OAdD;AAeH,KAlBgB,CAuBjB;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cACKT,QAAQ,CAACM,GAAT,CAAcG,GAAD,IAAS;AACnB,UAAIA,GAAG,CAACD,IAAJ,KAAaT,KAAK,CAACS,IAAvB,EAA6B;AACzB,4BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACKR,QAAQ,CAACM,GAAT,CAAcN,QAAD,iBAAc;AAAA,sBAAKA,QAAQ,CAACS;AAAd;AAAA;AAAA;AAAA;AAAA,kBAA3B;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAND,MAMO;AACH,4BACI;AAAK,UAAA,UAAU,EAAC,iBAAhB;AAAA,oBACKT,QAAQ,CAACM,GAAT,CAAcN,QAAD,iBAAc;AAAA,sBAAKA,QAAQ,CAACS;AAAd;AAAA;AAAA;AAAA;AAAA,kBAA3B;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;AACJ,KAdA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GArFeX,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from './Socket';\r\n\r\n// let messageList = [];\r\nexport function Messages(props) {\r\n    /*That array saves all current app messages*/\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message_evt\", (msgObject) => {\r\n            setMessages([...messages, msgObject]);\r\n        })\r\n        return () => { socket.off() };\r\n    }, [messages]);\r\n\r\n    function CheckUser() {\r\n\r\n        {\r\n            messages.map((message) => {\r\n                if (message.name === props.name) {\r\n                    return (\r\n                        <div className=\"MyMessageContainer\">\r\n                            <p>{message.msg}</p>\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"ExternalMessageContainer\">\r\n                            <p>{message.msg}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        // <div className=\"MyMessageContainer\">\r\n        //     {messages.map((msg) => {\r\n        //         msg.name !== props.name &&\r\n\r\n        //             <div className_=\"externalMessage\">\r\n        //                 {messages.map((messages, i) => <p key={i} >{messages.msg}</p>)}\r\n        //             </div>\r\n        //     })}\r\n\r\n\r\n        //     {messages.map((msg) => {\r\n        //         msg.name === props.name &&\r\n        //             <div className=\"myMessage\">\r\n        //                 {messages.map((messages, i) => <p key={i} >{messages.msg}</p>)}\r\n        //             </div>\r\n        //     })}\r\n        // </div>\r\n\r\n        // } else {\r\n        //     return (\r\n        //         <div className=\"ExternalMessageContainer\">\r\n        //             {messages.map((messages, i) => <div key={i} className=\"externalMessage\">{messages.msg}</div>)}\r\n        //         </div>\r\n\r\n        //     )\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className=\"MyMessageContainer\">\r\n            {messages.map((msg) => {\r\n                if (msg.name === props.name) {\r\n                    return (\r\n                        <div className=\"myMessage\">\r\n                            {messages.map((messages) => <p >{messages.msg}</p>)}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className_=\"externalMessage\">\r\n                            {messages.map((messages) => <p >{messages.msg}</p>)}\r\n                        </div>\r\n                    );\r\n                }\r\n            })\r\n\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}