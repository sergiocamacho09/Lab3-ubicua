{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio\\\\Desktop\\\\4\\xBA Carrera\\\\Ubicua\\\\lab3-ubicua\\\\client\\\\src\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport socket from './Socket'; // let messageList = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Messages(_ref) {\n  _s();\n\n  let {\n    name\n  } = _ref;\n\n  /*That array saves all current app messages*/\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"message_evt\", msgObject => {\n      setMessages([...messages, msgObject]);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [messages]);\n\n  function CheckUser() {\n    // messages.map((message) => {\n    //     if (message.user === props.user) {\n    //         return (\n    //             <div className=\"MyMessageContainer\">\n    //                 <p>{message.msg}</p>\n    //             </div>\n    //         );\n    //     } else {\n    //         return (\n    //             <div className=\"ExternalMessageContainer\">\n    //                 <p>{message.msg}</p>\n    //             </div>\n    //         )\n    //     }\n    // })\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MyMessageContainer\",\n      children: [messages.map(msg => {\n        msg.name !== {\n          name\n        } && /*#__PURE__*/_jsxDEV(\"div\", {\n          className_: \"externalMessage\",\n          children: messages.map((messages, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messages.msg\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 56\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this);\n      }), messages.map(msg => {\n        msg.name === {\n          name\n        } && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myMessage\",\n          children: messages.map((messages, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messages.msg\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this); // } else {\n    //     return (\n    //         <div className=\"ExternalMessageContainer\">\n    //             {messages.map((messages, i) => <div key={i} className=\"externalMessage\">{messages.msg}</div>)}\n    //         </div>\n    //     )\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CheckUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Sergio/Desktop/4ยบ Carrera/Ubicua/lab3-ubicua/client/src/components/Messages.js"],"names":["React","useState","useEffect","socket","Messages","name","messages","setMessages","on","msgObject","off","CheckUser","map","msg","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;AACA,OAAO,SAASC,QAAT,OAA0B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;;AAC7B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACK,EAAP,CAAU,aAAV,EAA0BC,SAAD,IAAe;AACpCF,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,SAAd,CAAD,CAAX;AACH,KAFD;AAGA,WAAO,MAAM;AAAEN,MAAAA,MAAM,CAACO,GAAP;AAAc,KAA7B;AACH,GALQ,EAKN,CAACJ,QAAD,CALM,CAAT;;AAOA,WAASK,SAAT,GAAqB;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACKL,QAAQ,CAACM,GAAT,CAAcC,GAAD,IAAQ;AACnBA,QAAAA,GAAG,CAACR,IAAJ,KAAa;AAACA,UAAAA;AAAD,SAAb,iBACA;AAAK,UAAA,UAAU,EAAC,iBAAhB;AAAA,oBACMC,QAAQ,CAACM,GAAT,CAAa,CAACN,QAAD,EAAWQ,CAAX,kBAAiB;AAAA,sBAAaR,QAAQ,CAACO;AAAtB,aAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,kBAA9B;AADN;AAAA;AAAA;AAAA;AAAA,gBADA;AAIF,OALA,CADL,EASKR,QAAQ,CAACM,GAAT,CAAcC,GAAD,IAAQ;AAClBA,QAAAA,GAAG,CAACR,IAAJ,KAAa;AAACA,UAAAA;AAAD,SAAb,iBACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACCC,QAAQ,CAACM,GAAT,CAAa,CAACN,QAAD,EAAWQ,CAAX,kBAAiB;AAAA,sBAAaR,QAAQ,CAACO;AAAtB,aAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,kBAA9B;AADD;AAAA;AAAA;AAAA;AAAA,gBADA;AAIH,OALA,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CApBiB,CAsCjB;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;AAED,sBACI;AAAA,2BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlEeV,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from './Socket';\r\n\r\n// let messageList = [];\r\nexport function Messages({name}) {\r\n    /*That array saves all current app messages*/\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message_evt\", (msgObject) => {\r\n            setMessages([...messages, msgObject]);\r\n        })\r\n        return () => { socket.off() };\r\n    }, [messages]);\r\n\r\n    function CheckUser() {\r\n\r\n        // messages.map((message) => {\r\n        //     if (message.user === props.user) {\r\n        //         return (\r\n        //             <div className=\"MyMessageContainer\">\r\n        //                 <p>{message.msg}</p>\r\n        //             </div>\r\n        //         );\r\n        //     } else {\r\n        //         return (\r\n        //             <div className=\"ExternalMessageContainer\">\r\n        //                 <p>{message.msg}</p>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // })\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"MyMessageContainer\">\r\n                {messages.map((msg) =>{\r\n                   msg.name !== {name} &&\r\n                   <div className_=\"externalMessage\">\r\n                        {messages.map((messages, i) => <p key={i} >{messages.msg}</p>)}\r\n                    </div>\r\n                })}\r\n                    \r\n                \r\n                {messages.map((msg) =>{\r\n                    msg.name === {name} &&\r\n                    <div className=\"myMessage\">\r\n                    {messages.map((messages, i) => <p key={i} >{messages.msg}</p>)}\r\n                </div>\r\n                })}\r\n            </div>\r\n        );\r\n        // } else {\r\n        //     return (\r\n        //         <div className=\"ExternalMessageContainer\">\r\n        //             {messages.map((messages, i) => <div key={i} className=\"externalMessage\">{messages.msg}</div>)}\r\n        //         </div>\r\n\r\n        //     )\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckUser />\r\n        </div>\r\n    );\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}