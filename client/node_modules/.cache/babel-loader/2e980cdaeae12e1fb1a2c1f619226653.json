{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio\\\\Desktop\\\\4\\xBA Carrera\\\\Ubicua\\\\lab3-ubicua\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport socket from \"./components/Socket\";\nimport { HomePage } from \"./components/HomePage\";\nimport { Trivial } from \"./components/Trivial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chance = require('chance');\n\nconst generate = new Chance();\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [userList, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [privateMessages, setPrivateMessages] = useState([]);\n  const [timeId, setTimeId] = useState(0);\n  const [trivial, setTrivial] = useState(null);\n  const [possiblesAnswers, setPossiblesAnswers] = useState([]);\n  const [goTrivial, setGoTrivial] = useState(false);\n  let messagesAux = [];\n  let privateMessagesAux = [];\n  useEffect(() => {\n    /*Creating a new user when he/she go into the app */\n    let isCancelled = false;\n\n    if (!isCancelled) {\n      let newUser = generate.name();\n      setName(newUser);\n      socket.emit(\"newUser\", newUser);\n    }\n\n    socket.on(\"userList\", array => {\n      setUsers(array);\n    });\n    /*Pushing global chat's messages */\n\n    socket.on(\"message_evt\", msgObject => {\n      messagesAux.push(msgObject);\n      setMessages(messagesAux);\n    });\n    /**External messages in private chat */\n\n    socket.on(\"message_evt_private\", msgObject => {\n      privateMessagesAux.push(msgObject);\n      setPrivateMessages(privateMessagesAux);\n    });\n    /**Mine messages in global chat */\n\n    socket.on(\"message_evt_private_mine\", msgObject => {\n      privateMessagesAux.push(msgObject);\n      setPrivateMessages(privateMessagesAux);\n    });\n    /*Event that tell us if we are going to the trivial or not*/\n\n    socket.on(\"isTrivial\", data => {\n      setGoTrivial(data);\n    });\n    /*Set the trivial listener */\n\n    socket.on(\"trivial\", data => {\n      setTrivial(data.results[0]);\n      let possiblesAnswers = [];\n      possiblesAnswers.push(data.results[0].correct_answer);\n\n      for (var i = 0; i < data.results[0].incorrect_answers.length; i++) {\n        possiblesAnswers.push(data.results[0].incorrect_answers[i]);\n      }\n\n      possiblesAnswers = shuffle(possiblesAnswers);\n      setPossiblesAnswers(possiblesAnswers);\n      setGoTrivial(true);\n      /**Set a timer that disconnect the user if it does not receive an answer */\n\n      var id = setTimeout(() => {\n        alert(\"Has sido desconectado\");\n        socket.disconnect();\n      }, 15000);\n      setTimeId(id);\n    });\n    mousemovemethod;\n    return () => isCancelled = true;\n  }, []);\n\n  var direction = \"\",\n      oldx = 0,\n      mousemovemethod = function (e) {\n    if (e.pageX < oldx) {\n      console.log(\"vas a la izquierda\");\n      direction = \"left\";\n    } else if (e.pageX > oldx) {\n      console.log(\"vas a la derecha\");\n      direction = \"right\";\n    }\n\n    oldx = e.pageX;\n  };\n\n  useEffect(() => {\n    socket.emit(\"usersConnected\");\n  });\n  /**Shuffle possibles answers array */\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex;\n\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [goTrivial === false && /*#__PURE__*/_jsxDEV(HomePage, {\n      name: name,\n      userlist: userList,\n      messages: messages,\n      privateMessages: privateMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), goTrivial === true && /*#__PURE__*/_jsxDEV(Trivial, {\n      trivial: trivial,\n      possiblesAnswer: possiblesAnswers,\n      timeId: timeId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fx1Gu4nSzJ6+aB+5/Lkp1sicB6U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sergio/Desktop/4ยบ Carrera/Ubicua/lab3-ubicua/client/src/App.js"],"names":["useState","useEffect","socket","HomePage","Trivial","Chance","require","generate","App","name","setName","userList","setUsers","messages","setMessages","privateMessages","setPrivateMessages","timeId","setTimeId","trivial","setTrivial","possiblesAnswers","setPossiblesAnswers","goTrivial","setGoTrivial","messagesAux","privateMessagesAux","isCancelled","newUser","emit","on","array","msgObject","push","data","results","correct_answer","i","incorrect_answers","length","shuffle","id","setTimeout","alert","disconnect","mousemovemethod","direction","oldx","e","pageX","console","log","currentIndex","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport socket from \"./components/Socket\";\r\nimport { HomePage } from \"./components/HomePage\";\r\nimport { Trivial } from \"./components/Trivial\";\r\nconst Chance = require('chance');\r\nconst generate = new Chance();\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [userList, setUsers] = useState([]);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [privateMessages, setPrivateMessages] = useState([]);\r\n  const [timeId, setTimeId] = useState(0);\r\n  const [trivial, setTrivial] = useState(null);\r\n  const [possiblesAnswers, setPossiblesAnswers] = useState([]);\r\n  const [goTrivial, setGoTrivial] = useState(false);\r\n\r\n  let messagesAux = [];\r\n  let privateMessagesAux = [];\r\n\r\n  useEffect(() => {\r\n    /*Creating a new user when he/she go into the app */\r\n    let isCancelled = false;\r\n    if (!isCancelled) {\r\n      let newUser = generate.name();\r\n      setName(newUser);\r\n      socket.emit(\"newUser\", newUser);\r\n    }\r\n    socket.on(\"userList\", (array) => {\r\n      setUsers(array);\r\n    });\r\n    /*Pushing global chat's messages */\r\n    socket.on(\"message_evt\", (msgObject) => {\r\n      messagesAux.push(msgObject)\r\n      setMessages(messagesAux);\r\n    })\r\n    /**External messages in private chat */\r\n    socket.on(\"message_evt_private\", (msgObject) => {\r\n      privateMessagesAux.push(msgObject)\r\n      setPrivateMessages(privateMessagesAux);\r\n    })\r\n    /**Mine messages in global chat */\r\n    socket.on(\"message_evt_private_mine\", (msgObject) => {\r\n      privateMessagesAux.push(msgObject)\r\n      setPrivateMessages(privateMessagesAux);\r\n    })\r\n    /*Event that tell us if we are going to the trivial or not*/\r\n    socket.on(\"isTrivial\", data => {\r\n      setGoTrivial(data);\r\n    })\r\n\r\n    /*Set the trivial listener */\r\n    socket.on(\"trivial\", data => {\r\n      setTrivial(data.results[0]);\r\n      let possiblesAnswers = [];\r\n      possiblesAnswers.push(data.results[0].correct_answer);\r\n      for (var i = 0; i < data.results[0].incorrect_answers.length; i++) {\r\n        possiblesAnswers.push(data.results[0].incorrect_answers[i]);\r\n      }\r\n\r\n      possiblesAnswers = shuffle(possiblesAnswers);\r\n      setPossiblesAnswers(possiblesAnswers);\r\n      setGoTrivial(true);\r\n      /**Set a timer that disconnect the user if it does not receive an answer */\r\n      var id = setTimeout(() => {\r\n        alert(\"Has sido desconectado\");\r\n        socket.disconnect();\r\n      }, 15000);\r\n      setTimeId(id);\r\n    })\r\n    mousemovemethod;\r\n    return () => isCancelled = true;\r\n  }, []);\r\n\r\n  var direction = \"\",\r\n    oldx = 0,\r\n    mousemovemethod = function (e) {\r\n\r\n      if (e.pageX < oldx) {\r\n        console.log(\"vas a la izquierda\");\r\n        direction = \"left\"\r\n      } else if (e.pageX > oldx) {\r\n        console.log(\"vas a la derecha\");\r\n        direction = \"right\"\r\n      }\r\n\r\n      oldx = e.pageX;\r\n\r\n    }\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"usersConnected\");\r\n  });\r\n\r\n  /**Shuffle possibles answers array */\r\n  function shuffle(array) {\r\n    let currentIndex = array.length, randomIndex;\r\n\r\n    while (currentIndex != 0) {\r\n\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {goTrivial === false &&\r\n        <HomePage name={name} userlist={userList} messages={messages} privateMessages={privateMessages} />\r\n      }\r\n      {goTrivial === true &&\r\n        <Trivial trivial={trivial} possiblesAnswer={possiblesAnswers} timeId={timeId} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}