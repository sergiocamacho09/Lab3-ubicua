{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio\\\\Desktop\\\\4\\xBA Carrera\\\\Ubicua\\\\lab3-ubicua\\\\client\\\\src\\\\components\\\\Messages.js\";\nimport React, { useState, useEffect } from 'react';\nimport socket from './Socket'; // let messageList = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Messages(props) {\n  /*That array saves all current app messages*/\n  // const [messages, setMessages] = useState([]);\n  // useEffect(() => {\n  //     setMessages([...messages,props.messages]);\n  // },[]);\n  console.log(props.messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"GlobalChat\",\n    children: props.messages.map((msg, i) => {\n      if (msg.name === props.name) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MyMessageContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"myMessage\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.msg\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ExternalMessageContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"externalMessage\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"userName\",\n              children: msg.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.msg\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Sergio/Desktop/4ยบ Carrera/Ubicua/lab3-ubicua/client/src/components/Messages.js"],"names":["React","useState","useEffect","socket","Messages","props","console","log","messages","map","msg","i","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B;AACA;AAEA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AAEA,sBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,cACKH,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC5B,UAAID,GAAG,CAACE,IAAJ,KAAaP,KAAK,CAACO,IAAvB,EAA6B;AACzB,4BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAA,wBAAYF,GAAG,CAACA;AAAhB,eAAQC,CAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATD,MASO;AACH,4BACI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,UAAb;AAAA,wBAAyBD,GAAG,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAYF,GAAG,CAACA;AAAhB,eAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH;AACJ,KArBA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;KAxCeP,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from './Socket';\r\n\r\n// let messageList = [];\r\nexport function Messages(props) {\r\n    /*That array saves all current app messages*/\r\n    // const [messages, setMessages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     setMessages([...messages,props.messages]);\r\n    // },[]);\r\n\r\n    console.log(props.messages);\r\n\r\n    return (\r\n        <div id=\"GlobalChat\">\r\n            {props.messages.map((msg, i) => {\r\n                if (msg.name === props.name) {\r\n                    return (\r\n                        <div className=\"MyMessageContainer\">\r\n                            <div className=\"myMessage\">\r\n                                <p key={i}>{msg.msg}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"ExternalMessageContainer\">\r\n                            <div className=\"externalMessage\">\r\n                                <p className=\"userName\">{msg.name}</p>\r\n                                <p key={i}>{msg.msg}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    );\r\n                }\r\n            })\r\n\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}