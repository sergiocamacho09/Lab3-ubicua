{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camac\\\\Desktop\\\\lab3-ubicua\\\\client\\\\src\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport socket from './Socket'; // let messageList = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Messages(props) {\n  _s();\n\n  /*That array saves all current app messages*/\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"message_evt\", msgObject => {\n      setMessages([...messages, msgObject]);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [messages]);\n\n  function CheckUser(_ref) {\n    let {\n      name\n    } = _ref;\n    {\n      messages.map(msg => {\n        if (msg.name === {\n          name\n        }) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"MyMessageContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ExternalMessageContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this);\n        }\n      });\n    }\n    ; // if ({ name } !== messages.user) {\n    //     return (\n    //         <div className=\"ExternalMessageContainer\">\n    //             {messages.map((messages, i) => <div key={i} className=\"externalMessage\">{messages.msg}</div>)}\n    //         </div>\n    //     );\n    // } else {\n    //     return (\n    //         <div className=\"MyMessageContainer\">\n    //             {messages.map((messages, i) => <div key={i} className_=\"myMessage\">{messages.msg}</div>)}\n    //         </div>\n    //     )\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CheckUser, {\n      name: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/camac/Desktop/lab3-ubicua/client/src/components/Messages.js"],"names":["React","useState","useEffect","socket","Messages","props","messages","setMessages","on","msgObject","off","CheckUser","name","map","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC5B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACK,EAAP,CAAU,aAAV,EAA0BC,SAAD,IAAe;AACpCF,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,SAAd,CAAD,CAAX;AACH,KAFD;AAGA,WAAO,MAAM;AAAEN,MAAAA,MAAM,CAACO,GAAP;AAAc,KAA7B;AACH,GALQ,EAKN,CAACJ,QAAD,CALM,CAAT;;AAOA,WAASK,SAAT,OAA6B;AAAA,QAAV;AAAEC,MAAAA;AAAF,KAAU;AACzB;AACIN,MAAAA,QAAQ,CAACO,GAAT,CAAcC,GAAD,IAAS;AAClB,YAAIA,GAAG,CAACF,IAAJ,KAAa;AAAEA,UAAAA;AAAF,SAAjB,EAA2B;AACvB,8BACI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI;AAAA,wBAAIE,GAAG,CAACA;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND,MAMK;AACD,8BACI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACI;AAAA,wBAAIA,GAAG,CAACA;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH;AACJ,OAdD;AAeH;AAAA,KAjBwB,CAkBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAET,KAAK,CAACO;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAnDeR,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from './Socket';\r\n\r\n// let messageList = [];\r\nexport function Messages(props) {\r\n    /*That array saves all current app messages*/\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message_evt\", (msgObject) => {\r\n            setMessages([...messages, msgObject]);\r\n        })\r\n        return () => { socket.off() };\r\n    }, [messages]);\r\n\r\n    function CheckUser({ name }) {\r\n        {\r\n            messages.map((msg) => {\r\n                if (msg.name === { name }) {\r\n                    return (\r\n                        <div className=\"MyMessageContainer\">\r\n                            <p>{msg.msg}</p>\r\n                        </div>\r\n                    );\r\n                }else{\r\n                    return(\r\n                        <div className=\"ExternalMessageContainer\">\r\n                            <p>{msg.msg}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        };\r\n        // if ({ name } !== messages.user) {\r\n        //     return (\r\n        //         <div className=\"ExternalMessageContainer\">\r\n        //             {messages.map((messages, i) => <div key={i} className=\"externalMessage\">{messages.msg}</div>)}\r\n        //         </div>\r\n        //     );\r\n        // } else {\r\n        //     return (\r\n        //         <div className=\"MyMessageContainer\">\r\n        //             {messages.map((messages, i) => <div key={i} className_=\"myMessage\">{messages.msg}</div>)}\r\n        //         </div>\r\n        //     )\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckUser name={props.name} />\r\n        </div>\r\n    );\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}