{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camac\\\\Desktop\\\\lab3-ubicua\\\\client\\\\src\\\\components\\\\InputMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport socket from \"./Socket\";\n/*Saving the last message in order to check is empty*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet lastMessge = \"\";\nexport function InputMessages(props) {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [timeOut, setTimeOut] = useState();\n\n  function handleOnClick() {\n    if (lastMessge !== \"\") {\n      if (props.currentPage === \"GlobalChat\") {\n        socket.emit(\"message_evt\", props.name, message);\n      } else if (props.currentPage === \"PrivateChat\") {\n        socket.emit(\"message_evt_private\", props.id, props.room, props.myId, message);\n      }\n\n      document.getElementById(\"Message\").value = \"\";\n      lastMessge = \"\";\n    }\n  }\n\n  function handleOnChange(e) {\n    setMessage(e.target.value);\n    lastMessge = e.target.value;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewMessage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"MessageInputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"Message\",\n        onChange: handleOnChange,\n        placeholder: \"Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"ButtonMessage\",\n        onClick: handleOnClick,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputMessages, \"a+HQUZIPdPtsiWa7SA+Du6vp3/U=\");\n\n_c = InputMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMessages\");","map":{"version":3,"sources":["C:/Users/camac/Desktop/lab3-ubicua/client/src/components/InputMessages.js"],"names":["React","useState","socket","lastMessge","InputMessages","props","message","setMessage","timeOut","setTimeOut","handleOnClick","currentPage","emit","name","id","room","myId","document","getElementById","value","handleOnChange","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;AACA,IAAIC,UAAU,GAAG,EAAjB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;;AAEA,WAASS,aAAT,GAAyB;AACrB,QAAIP,UAAU,KAAK,EAAnB,EAAuB;AACnB,UAAGE,KAAK,CAACM,WAAN,KAAsB,YAAzB,EAAsC;AAClCT,QAAAA,MAAM,CAACU,IAAP,CAAY,aAAZ,EAA2BP,KAAK,CAACQ,IAAjC,EAAuCP,OAAvC;AACH,OAFD,MAEM,IAAGD,KAAK,CAACM,WAAN,KAAsB,aAAzB,EAAuC;AACzCT,QAAAA,MAAM,CAACU,IAAP,CAAY,qBAAZ,EAAmCP,KAAK,CAACS,EAAzC,EAA6CT,KAAK,CAACU,IAAnD,EAAyDV,KAAK,CAACW,IAA/D,EAAqEV,OAArE;AACH;;AACDW,MAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,GAA2C,EAA3C;AACAhB,MAAAA,UAAU,GAAG,EAAb;AACH;AACJ;;AAED,WAASiB,cAAT,CAAwBC,CAAxB,EAA2B;AACvBd,IAAAA,UAAU,CAACc,CAAC,CAACC,MAAF,CAASH,KAAV,CAAV;AACAhB,IAAAA,UAAU,GAAGkB,CAAC,CAACC,MAAF,CAASH,KAAtB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,uBAAR;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,SAAV;AAAoB,QAAA,QAAQ,EAAEC,cAA9B;AAA8C,QAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,EAAE,EAAC,eAAX;AAA2B,QAAA,OAAO,EAAEV,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA7BeN,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\r\nimport socket from \"./Socket\";\r\n\r\n/*Saving the last message in order to check is empty*/\r\nlet lastMessge = \"\";\r\n\r\nexport function InputMessages(props) {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [timeOut, setTimeOut] = useState()\r\n\r\n    function handleOnClick() {\r\n        if (lastMessge !== \"\") {\r\n            if(props.currentPage === \"GlobalChat\"){\r\n                socket.emit(\"message_evt\", props.name, message);\r\n            }else if(props.currentPage === \"PrivateChat\"){\r\n                socket.emit(\"message_evt_private\", props.id, props.room, props.myId, message);\r\n            }\r\n            document.getElementById(\"Message\").value = \"\";\r\n            lastMessge = \"\";\r\n        }\r\n    }\r\n\r\n    function handleOnChange(e) {\r\n        setMessage(e.target.value);\r\n        lastMessge = e.target.value;\r\n    }\r\n\r\n    return (\r\n        <div className=\"NewMessage\">\r\n            <div id=\"MessageInputContainer\">\r\n                <input id=\"Message\" onChange={handleOnChange} placeholder=\"Mensaje\"></input>\r\n                <button id=\"ButtonMessage\" onClick={handleOnClick}>Enviar</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}