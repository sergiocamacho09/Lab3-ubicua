{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camac\\\\Desktop\\\\lab3-ubicua\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { InputMessages } from \"./components/InputMessages\";\nimport socket from \"./components/Socket\";\nimport { Messages } from \"./components/Messages\";\nimport { HomePage } from \"./components/HomePage\";\nimport { GlobalChat } from \"./components/GlobalChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chance = require('chance');\n\nconst generate = new Chance();\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [userList, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    let isCancelled = false;\n\n    if (!isCancelled) {\n      let newUser = generate.name();\n      setName(newUser);\n      socket.emit(\"newUser\", newUser);\n    }\n\n    console.log(\"ENTRA\");\n    return () => isCancelled = true;\n  }, []);\n  useEffect(() => {\n    socket.emit(\"usersConnected\");\n    socket.on(\"userList\", array => {\n      setUsers(array);\n    });\n  });\n  useEffect(() => {\n    socket.on(\"message_evt\", msgObject => {\n      setMessages([...messages, msgObject]);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(HomePage, {\n      name: name,\n      userlist: userList,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Rzcl7igAtL9P4XvpIjffHXZSNoE=\");\n\n_c = App;\nexport default App;\n/*\r\nconst socket = io();\r\nconst button = document.querySelector(\"button\");\r\nconst input = document.querySelector(\"input\");\r\nconst msg = document.querySelector(\"#msg\");\r\n\r\nbutton.addEventListener(\"click\", function(e) {\r\n  const text = input.value;\r\n  //enviarselo al servidor\r\n  socket.emit(\"message_evt\", {msg: text});\r\n});\r\n\r\nsocket.on(\"message_evt\", function(message){\r\n  msg.innerHTML = message.msg;\r\n});\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/camac/Desktop/lab3-ubicua/client/src/App.js"],"names":["useState","useEffect","InputMessages","socket","Messages","HomePage","GlobalChat","Chance","require","generate","App","name","setName","userList","setUsers","messages","setMessages","isCancelled","newUser","emit","console","log","on","array","msgObject","off"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAG,IAAIF,MAAJ,EAAjB;;AAEA,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,QAAX,IAAuBd,QAAQ,CAAC,EAAD,CAArC;AAEA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,WAAW,GAAG,KAAlB;;AACA,QAAI,CAACA,WAAL,EAAkB;AAChB,UAAIC,OAAO,GAAGT,QAAQ,CAACE,IAAT,EAAd;AACAC,MAAAA,OAAO,CAACM,OAAD,CAAP;AACAf,MAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ,EAAuBD,OAAvB;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAO,MAAMJ,WAAW,GAAG,IAA3B;AACD,GATQ,EASN,EATM,CAAT;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACgB,IAAP,CAAY,gBAAZ;AACAhB,IAAAA,MAAM,CAACmB,EAAP,CAAU,UAAV,EAAuBC,KAAD,IAAW;AAC/BT,MAAAA,QAAQ,CAACS,KAAD,CAAR;AACD,KAFD;AAGD,GALQ,CAAT;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACmB,EAAP,CAAU,aAAV,EAA0BE,SAAD,IAAe;AACtCR,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcS,SAAd,CAAD,CAAX;AACD,KAFD;AAGA,WAAO,MAAM;AAAErB,MAAAA,MAAM,CAACsB,GAAP;AAAc,KAA7B;AACD,GALQ,EAKN,CAACV,QAAD,CALM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ,IAAhB;AAAsB,MAAA,QAAQ,EAAEE,QAAhC;AAA0C,MAAA,QAAQ,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA3DQL,G;;KAAAA,G;AA6DT,eAAeA,GAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { InputMessages } from \"./components/InputMessages\";\r\nimport socket from \"./components/Socket\";\r\nimport { Messages } from \"./components/Messages\";\r\nimport { HomePage } from \"./components/HomePage\";\r\nimport { GlobalChat } from \"./components/GlobalChat\";\r\nconst Chance = require('chance');\r\nconst generate = new Chance();\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [userList, setUsers] = useState([]);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n    if (!isCancelled) {\r\n      let newUser = generate.name();\r\n      setName(newUser);\r\n      socket.emit(\"newUser\", newUser);\r\n    }\r\n    console.log(\"ENTRA\");\r\n    return () => isCancelled = true;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"usersConnected\");\r\n    socket.on(\"userList\", (array) => {\r\n      setUsers(array);\r\n    });\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message_evt\", (msgObject) => {\r\n      setMessages([...messages, msgObject]);\r\n    })\r\n    return () => { socket.off() };\r\n  }, [messages]);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HomePage name={name} userlist={userList} messages={messages} />\r\n      {/* {globalChat === \"HomePage\" &&\r\n        <div>\r\n          <button onClick={<ChangeScreen newPage=\"GlobalChat\"/>}>Global Chat</button>\r\n          <HomePage name={name} userlist={userList} messages={messages} /></div>\r\n      }\r\n      {/* {globalChat === \"GlobalChat\" && */}\r\n      {/* <GlobalChat name={name} />\r\n      } */}\r\n      {/* <div id=\"Header\">\r\n        <div id=\"UserName\">\r\n          {name}\r\n        </div>\r\n        <div id=\"UsersList\">\r\n\r\n        </div>\r\n        <div id=\"ViewUsers\">\r\n          <button id=\"ToggleButton\" onClick={loadUsers}>Users</button>\r\n        </div>\r\n      </div> */}\r\n      {/* <Messages name={name}/>\r\n      <InputMessages name={name} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n/*\r\nconst socket = io();\r\nconst button = document.querySelector(\"button\");\r\nconst input = document.querySelector(\"input\");\r\nconst msg = document.querySelector(\"#msg\");\r\n\r\nbutton.addEventListener(\"click\", function(e) {\r\n  const text = input.value;\r\n  //enviarselo al servidor\r\n  socket.emit(\"message_evt\", {msg: text});\r\n});\r\n\r\nsocket.on(\"message_evt\", function(message){\r\n  msg.innerHTML = message.msg;\r\n});\r\n*/\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}