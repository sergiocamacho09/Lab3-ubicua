{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camac\\\\Desktop\\\\lab3-ubicua\\\\client\\\\src\\\\components\\\\InputMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport socket from \"./Socket\";\n/*Saving the last message in order to check is empty*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet lastMessge = \"\";\nexport function InputMessages(props) {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [timeOut, setTimeOut] = useState(null);\n  useEffect(() => {\n    let lastX = 0;\n    let lastY = 0;\n    let lastZ = 0; // let lastTime = new Date();\n\n    let shaking = false;\n    let timer = null;\n    const options = {\n      threshold: 15\n    };\n\n    if ('Accelerometer' in window) {\n      try {\n        const acc = new window.Accelerometer({\n          frequency: 60\n        });\n        /*acc.addEventListener(\"reading\", function(){\r\n                  })*/\n\n        acc.onreading = () => {\n          const deltaX = Math.abs(lastX - acc.x);\n          const deltaY = Math.abs(lastY - acc.y);\n          const deltaZ = Math.abs(lastZ - acc.z);\n\n          if (deltaX > options.threshold && deltaY > options.threshold || deltaX > options.threshold && deltaZ > options.threshold || deltaY > options.threshold && deltaZ > options.threshold) {\n            if (!shaking) {\n              console.log('shake');\n              shaking = true;\n              clearTimeout(timeOut);\n\n              if (timer) {\n                clearTimeout(timer);\n                timer = null;\n              }\n            }\n          } else {\n            if (shaking) {\n              shaking = false; //document.body.style.backgroundColor = \"white\";\n\n              timer = setTimeout(() => {\n                console.log(\"stop\");\n              }, 500);\n            }\n          }\n\n          lastX = acc.x;\n          lastY = acc.y;\n          lastZ = acc.z;\n        };\n\n        acc.start();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, []);\n\n  function handleOnClick() {\n    if (lastMessge !== \"\") {\n      if (props.currentPage === \"GlobalChat\") {\n        socket.emit(\"message_evt\", props.name, message);\n      } else if (props.currentPage === \"PrivateChat\") {\n        socket.emit(\"message_evt_private\", props.id, props.room, props.myId, message);\n      }\n\n      document.getElementById(\"Message\").value = \"\";\n      lastMessge = \"\";\n    }\n  }\n\n  function sendTemp() {\n    var id = setTimeout(() => {\n      if (lastMessge !== \"\") {\n        if (props.currentPage === \"GlobalChat\") {\n          socket.emit(\"message_evt\", props.name, message);\n        } else if (props.currentPage === \"PrivateChat\") {\n          socket.emit(\"message_evt_private\", props.id, props.room, props.myId, message);\n        }\n\n        document.getElementById(\"Message\").value = \"\";\n        lastMessge = \"\";\n      }\n    }, 5000);\n    setTimeOut(id);\n  }\n\n  function handleOnChange(e) {\n    setMessage(e.target.value);\n    lastMessge = e.target.value;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewMessage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"MessageInputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"Message\",\n        onChange: handleOnChange,\n        placeholder: \"Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"ButtonMessage\",\n        onClick: handleOnClick,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"TimeButtonMessage\",\n        onClick: sendTemp,\n        children: \"Temporizador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputMessages, \"NC+WeStk2eoNVkqqcXuYEEiLZY0=\");\n\n_c = InputMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMessages\");","map":{"version":3,"sources":["C:/Users/camac/Desktop/lab3-ubicua/client/src/components/InputMessages.js"],"names":["React","useState","useEffect","socket","lastMessge","InputMessages","props","message","setMessage","timeOut","setTimeOut","lastX","lastY","lastZ","shaking","timer","options","threshold","window","acc","Accelerometer","frequency","onreading","deltaX","Math","abs","x","deltaY","y","deltaZ","z","console","log","clearTimeout","setTimeout","start","err","handleOnClick","currentPage","emit","name","id","room","myId","document","getElementById","value","sendTemp","handleOnChange","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from \"./Socket\";\r\n\r\n/*Saving the last message in order to check is empty*/\r\nlet lastMessge = \"\";\r\n\r\nexport function InputMessages(props) {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [timeOut, setTimeOut] = useState(null);\r\n\r\n    useEffect(() =>{\r\n        let lastX = 0;\r\n        let lastY = 0;\r\n        let lastZ = 0;\r\n    \r\n        // let lastTime = new Date();\r\n    \r\n        let shaking = false;\r\n        let timer = null;\r\n    \r\n        const options = {\r\n          threshold: 15\r\n        };\r\n    \r\n        if ('Accelerometer' in window) {\r\n          try {\r\n            const acc = new window.Accelerometer({ frequency: 60 });\r\n            /*acc.addEventListener(\"reading\", function(){\r\n        \r\n            })*/\r\n            acc.onreading = () => {\r\n              const deltaX = Math.abs(lastX - acc.x);\r\n              const deltaY = Math.abs(lastY - acc.y);\r\n              const deltaZ = Math.abs(lastZ - acc.z);\r\n    \r\n              if (((deltaX > options.threshold) && (deltaY > options.threshold)) ||\r\n                ((deltaX > options.threshold) && (deltaZ > options.threshold)) ||\r\n                ((deltaY > options.threshold) && (deltaZ > options.threshold))\r\n              ) {\r\n                if (!shaking) {\r\n                  console.log('shake');\r\n                  shaking = true;\r\n                  clearTimeout(timeOut);\r\n                  if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                  }\r\n                }\r\n              } else {\r\n                if (shaking) {\r\n                  shaking = false;\r\n                  //document.body.style.backgroundColor = \"white\";\r\n                  timer = setTimeout(() => {\r\n                    console.log(\"stop\");\r\n                  }, 500);\r\n                }\r\n              }\r\n    \r\n              lastX = acc.x;\r\n              lastY = acc.y;\r\n              lastZ = acc.z;\r\n    \r\n            }\r\n    \r\n            acc.start();\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n    },[])\r\n\r\n    function handleOnClick() {\r\n        if (lastMessge !== \"\") {\r\n            if (props.currentPage === \"GlobalChat\") {\r\n                socket.emit(\"message_evt\", props.name, message);\r\n            } else if (props.currentPage === \"PrivateChat\") {\r\n                socket.emit(\"message_evt_private\", props.id, props.room, props.myId, message);\r\n            }\r\n            document.getElementById(\"Message\").value = \"\";\r\n            lastMessge = \"\";\r\n        }\r\n    }\r\n\r\n    function sendTemp() {\r\n        var id = setTimeout(() => {\r\n            if (lastMessge !== \"\") {\r\n                if (props.currentPage === \"GlobalChat\") {\r\n                    socket.emit(\"message_evt\", props.name, message);\r\n                } else if (props.currentPage === \"PrivateChat\") {\r\n                    socket.emit(\"message_evt_private\", props.id, props.room, props.myId, message);\r\n                }\r\n                document.getElementById(\"Message\").value = \"\";\r\n                lastMessge = \"\";\r\n            }\r\n        }, 5000);\r\n        setTimeOut(id);\r\n    }\r\n\r\n    function handleOnChange(e) {\r\n        setMessage(e.target.value);\r\n        lastMessge = e.target.value;\r\n    }\r\n\r\n    return (\r\n        <div className=\"NewMessage\">\r\n            <div id=\"MessageInputContainer\">\r\n                <input id=\"Message\" onChange={handleOnChange} placeholder=\"Mensaje\"></input>\r\n                <button id=\"ButtonMessage\" onClick={handleOnClick}>Enviar</button>\r\n                <button id=\"TimeButtonMessage\" onClick={sendTemp}>Temporizador</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}