[{"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\index.js":"1","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\App.js":"2","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\Socket.js":"3","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\HomePage.js":"4","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\GlobalChat.js":"5","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\PrivateChat.js":"6","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\InputMessages.js":"7","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\Messages.js":"8"},{"size":268,"mtime":1637340286907,"results":"9","hashOfConfig":"10"},{"size":1525,"mtime":1637585979049,"results":"11","hashOfConfig":"10"},{"size":110,"mtime":1637579544804,"results":"12","hashOfConfig":"10"},{"size":2495,"mtime":1637582037692,"results":"13","hashOfConfig":"10"},{"size":419,"mtime":1637577889962,"results":"14","hashOfConfig":"10"},{"size":531,"mtime":1637579307707,"results":"15","hashOfConfig":"10"},{"size":3866,"mtime":1637589072987,"results":"16","hashOfConfig":"10"},{"size":2754,"mtime":1637582017863,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"oem63o",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\index.js",[],["37","38"],"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\App.js",["39"],"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\Socket.js",[],"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\HomePage.js",["40","41","42"],"import React, { useState, useEffect } from \"react\";\r\nimport { GlobalChat } from \"./GlobalChat\";\r\nimport { PrivateChat } from \"./PrivateChat\";\r\n\r\nexport function HomePage(props) {\r\n    const [globalChat, setGlobalChat] = useState(\"HomePage\");\r\n    const [privateChat, setPrivateChat] = useState(\"\");\r\n    const [myId, setMyId] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n\r\n    var userlist = props.userlist;\r\n\r\n\r\n    function goGlobalChat() {\r\n        setGlobalChat(\"GlobalChat\");\r\n    }\r\n\r\n    function goHomePage() {\r\n        setGlobalChat(\"HomePage\");\r\n    }\r\n\r\n    function goPrivateChat(userId) {\r\n        setGlobalChat(\"PrivateChat\");\r\n        setPrivateChat(userId);\r\n        userlist.map((user) =>{\r\n            if(user.name === props.name){\r\n                setMyId(user.id);\r\n                setRoom(userId+user.id);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id=\"HomePageContainer\">\r\n            <div id=\"Header\">\r\n                <div id=\"UserName\">\r\n                    {props.name}\r\n                </div>\r\n                {globalChat !== \"HomePage\" &&\r\n                    <button onClick={goHomePage}>ðŸ¡°</button>\r\n                }\r\n            </div>\r\n            {globalChat === \"HomePage\" &&\r\n                <div id=\"HomePageContent\">\r\n                    <div id=\"GlobalChatButton\">\r\n                        <button id=\"GoToGlobalChat\" onClick={goGlobalChat}>Global Chat</button>\r\n                    </div>\r\n                    {props.userlist.map((user, i) => {\r\n                        if (user.name !== props.name) {\r\n                            return (\r\n                                <div className=\"UsersList\">\r\n                                    <div className=\"User\">\r\n                                        <button className=\"PrivateChatButton\" onClick={()=> goPrivateChat(user.id)}>{user.name}</button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>\r\n            }\r\n\r\n\r\n            {globalChat === \"GlobalChat\" &&\r\n\r\n                <GlobalChat name={props.name} messages={props.messages} currentPage={globalChat} />\r\n            }\r\n            {globalChat === \"PrivateChat\" &&\r\n                <PrivateChat name={props.name} room={room} myId={myId} privateMessages={props.privateMessages} currentPage={globalChat} id={privateChat} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\GlobalChat.js",[],"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\PrivateChat.js",[],"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\InputMessages.js",[],"C:\\Users\\camac\\Desktop\\lab3-ubicua\\client\\src\\components\\Messages.js",["43"],"import React from 'react';\r\n\r\nexport function Messages(props) {\r\n    /*That array saves all current app messages*/\r\n    // const [messages, setMessages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     setMessages([...messages,props.messages]);\r\n    // },[]);\r\n\r\n    return (\r\n        <div id=\"GlobalChat\">\r\n            {props.currentPage === \"PrivateChat\" &&\r\n                <div>\r\n                    {props.privateMessages.map((msg, i) => {\r\n                        if (msg.room === (props.id+props.myId) || msg.room === (props.myId+props.id)) {\r\n                            if (msg.from === props.myId) {\r\n                                return (\r\n                                    <div className=\"MyMessageContainer\">\r\n                                        <div className=\"myMessage\">\r\n                                            <p key={i}>{msg.msg}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <div className=\"ExternalMessageContainer\">\r\n                                        <div className=\"externalMessage\">\r\n                                            <p key={i}>{msg.msg}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                );\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    }\r\n                </div>\r\n            }\r\n            {props.currentPage === \"GlobalChat\" &&\r\n                <div>\r\n                    {props.messages.map((msg, i) => {\r\n                        if (msg.name === props.name) {\r\n                            return (\r\n                                <div className=\"MyMessageContainer\">\r\n                                    <div className=\"myMessage\">\r\n                                        <p key={i}>{msg.msg}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <div className=\"ExternalMessageContainer\">\r\n                                    <div className=\"externalMessage\">\r\n                                        <p className=\"userName\">{msg.name}</p>\r\n                                        <p key={i}>{msg.msg}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            );\r\n                        }\r\n                    })\r\n\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":42,"column":6,"nodeType":"50","endLine":42,"endColumn":8,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":25,"column":29,"nodeType":"58","messageId":"59","endLine":25,"endColumn":31},{"ruleId":"56","severity":1,"message":"60","line":48,"column":51,"nodeType":"58","messageId":"61","endLine":48,"endColumn":53},{"ruleId":"56","severity":1,"message":"60","line":15,"column":57,"nodeType":"58","messageId":"61","endLine":15,"endColumn":59},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'messagesAux' and 'privateMessagesAux'. Either include them or remove the dependency array.","ArrayExpression",["64"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [messagesAux, privateMessagesAux]",{"range":"67","text":"68"},[1250,1252],"[messagesAux, privateMessagesAux]"]