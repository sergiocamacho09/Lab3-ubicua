[{"C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\index.js":"1","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\App.js":"2","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\Socket.js":"3","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\HomePage.js":"4","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\GlobalChat.js":"5","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\PrivateChat.js":"6","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\InputMessages.js":"7","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\Messages.js":"8"},{"size":268,"mtime":1637311212567,"results":"9","hashOfConfig":"10"},{"size":2211,"mtime":1637522067242,"results":"11","hashOfConfig":"10"},{"size":110,"mtime":1637311212565,"results":"12","hashOfConfig":"10"},{"size":2860,"mtime":1637522224059,"results":"13","hashOfConfig":"10"},{"size":630,"mtime":1637513296866,"results":"14","hashOfConfig":"10"},{"size":456,"mtime":1637521078697,"results":"15","hashOfConfig":"10"},{"size":1195,"mtime":1637521156728,"results":"16","hashOfConfig":"10"},{"size":2715,"mtime":1637521095887,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17g0njz",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\index.js",[],["39","40"],"C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\App.js",["41","42","43","44"],"import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport socket from \"./components/Socket\";\r\nimport { HomePage } from \"./components/HomePage\";\r\nconst Chance = require('chance');\r\nconst generate = new Chance();\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [myId, setMyId] = useState(\"\");\r\n  const [userList, setUsers] = useState([]);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [privateMessages, setPrivateMessages] = useState([]);\r\n\r\n  let messagesAux = [];\r\n  let privateMessagesAux = [];\r\n\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n    if (!isCancelled) {\r\n      let newUser = generate.name();\r\n      setName(newUser);\r\n      socket.emit(\"newUser\", newUser);\r\n    }\r\n    socket.on(\"userList\", (array) => {\r\n      setUsers(array);\r\n    });\r\n    socket.on(\"message_evt\", (msgObject) => {\r\n      messagesAux.push(msgObject)\r\n      setMessages(messagesAux);\r\n    })\r\n   \r\n    return () => isCancelled = true;\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"usersConnected\");\r\n  });\r\n\r\n  /*LOS MENSAJES SE RECIBEN PERO NO SE IMPRIMEN*/\r\n  useEffect(() => {\r\n    socket.on(\"message_evt_private\", (msgObject) => {\r\n      privateMessagesAux.push(msgObject)\r\n      setPrivateMessages(privateMessagesAux);\r\n    })\r\n    return () => { socket.off() };\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HomePage name={name} userlist={userList} messages={messages} privateMessages={privateMessages} />\r\n      {/* {globalChat === \"HomePage\" &&\r\n        <div>\r\n          <button onClick={<ChangeScreen newPage=\"GlobalChat\"/>}>Global Chat</button>\r\n          <HomePage name={name} userlist={userList} messages={messages} /></div>\r\n      }\r\n      {/* {globalChat === \"GlobalChat\" && */}\r\n      {/* <GlobalChat name={name} />\r\n      } */}\r\n      {/* <div id=\"Header\">\r\n        <div id=\"UserName\">\r\n          {name}\r\n        </div>\r\n        <div id=\"UsersList\">\r\n\r\n        </div>\r\n        <div id=\"ViewUsers\">\r\n          <button id=\"ToggleButton\" onClick={loadUsers}>Users</button>\r\n        </div>\r\n      </div> */}\r\n      {/* <Messages name={name}/>\r\n      <InputMessages name={name} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\Socket.js",[],"C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\HomePage.js",["45","46","47","48"],"C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\GlobalChat.js",["49"],"import React from \"react\";\r\nimport socket from \"./Socket\";\r\nimport { InputMessages } from \"./InputMessages\";\r\nimport { Messages } from \"./Messages\";\r\n\r\nexport function GlobalChat(props) {\r\n\r\n    // function goHomePage(){\r\n    //     console.log(\"entra\");\r\n    //     socket.emit(\"globalChat\", \"HomePage\", props.name);\r\n    // }\r\n\r\n    return (\r\n        <div id=\"GlobalChatContainer\">\r\n            <Messages name={props.name} privateMessages={props.privateMessages} messages={props.messages} currentPage={props.currentPage}/>\r\n            <InputMessages name={props.name} currentPage={props.currentPage}/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\PrivateChat.js",[],"C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\InputMessages.js",["50"],"import React, { useState, useEffect } from 'react';\r\nimport socket from \"./Socket\";\r\n\r\n/*Saving the last message in order to check is empty*/\r\nlet lastMessge = \"\";\r\n\r\nexport function InputMessages(props) {\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    function handleOnClick() {\r\n        if (lastMessge !== \"\") {\r\n            if(props.currentPage === \"GlobalChat\"){\r\n                socket.emit(\"message_evt\", props.name, message);\r\n            }else if(props.currentPage === \"PrivateChat\"){\r\n                console.log(props.id);\r\n                socket.emit(\"message_evt_private\", props.id, props.myId, message);\r\n            }\r\n            document.getElementById(\"Message\").value = \"\";\r\n            lastMessge = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    function handleOnChange(e) {\r\n        setMessage(e.target.value);\r\n        lastMessge = e.target.value;\r\n    }\r\n\r\n    return (\r\n        <div className=\"NewMessage\">\r\n            <div id=\"MessageInputContainer\">\r\n                <input id=\"Message\" onChange={handleOnChange} placeholder=\"Mensaje\"></input>\r\n                <button id=\"ButtonMessage\" onClick={handleOnClick}>Enviar</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Sergio\\Desktop\\4º Carrera\\Ubicua\\lab3-ubicua\\client\\src\\components\\Messages.js",["51","52","53"],"import React, { useState, useEffect } from 'react';\r\nimport socket from './Socket';\r\n\r\n// let messageList = [];\r\nexport function Messages(props) {\r\n    /*That array saves all current app messages*/\r\n    // const [messages, setMessages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     setMessages([...messages,props.messages]);\r\n    // },[]);\r\n\r\n    return (\r\n        <div id=\"GlobalChat\">\r\n            {props.currentPage === \"PrivateChat\" &&\r\n                <div>\r\n                    {props.privateMessages.map((msg, i) => {\r\n                        if (msg.id === props.myId) {\r\n                            return (\r\n                                <div className=\"MyMessageContainer\">\r\n                                    <div className=\"myMessage\">\r\n                                        <p key={i}>{msg.msg}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <div className=\"ExternalMessageContainer\">\r\n                                    <div className=\"externalMessage\">\r\n                                        <p className=\"userName\">{msg.name}</p>\r\n                                        <p key={i}>{msg.msg}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            );\r\n                        }\r\n                    })\r\n\r\n                    }\r\n                </div>\r\n            }\r\n            {props.currentPage === \"GlobalChat\" &&\r\n                <div>\r\n                    {props.messages.map((msg, i) => {\r\n                        if (msg.name === props.name) {\r\n                            return (\r\n                                <div className=\"MyMessageContainer\">\r\n                                    <div className=\"myMessage\">\r\n                                        <p key={i}>{msg.msg}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <div className=\"ExternalMessageContainer\">\r\n                                    <div className=\"externalMessage\">\r\n                                        <p className=\"userName\">{msg.name}</p>\r\n                                        <p key={i}>{msg.msg}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            );\r\n                        }\r\n                    })\r\n\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":10,"nodeType":"60","messageId":"61","endLine":10,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":10,"column":16,"nodeType":"60","messageId":"61","endLine":10,"endColumn":23},{"ruleId":"63","severity":1,"message":"64","line":35,"column":6,"nodeType":"65","endLine":35,"endColumn":8,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":49,"column":6,"nodeType":"65","endLine":49,"endColumn":8,"suggestions":"68"},{"ruleId":"58","severity":1,"message":"69","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"62","line":8,"column":18,"nodeType":"60","messageId":"61","endLine":8,"endColumn":25},{"ruleId":"58","severity":1,"message":"70","line":10,"column":9,"nodeType":"60","messageId":"61","endLine":10,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":58,"column":51,"nodeType":"73","messageId":"74","endLine":58,"endColumn":53},{"ruleId":"58","severity":1,"message":"75","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"69","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"76","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"69","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"75","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'myId' is assigned a value but never used.","Identifier","unusedVar","'setMyId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messagesAux'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'privateMessagesAux'. Either include it or remove the dependency array.",["80"],"'useEffect' is defined but never used.","'userlist' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'socket' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [messagesAux]",{"range":"85","text":"86"},"Update the dependencies array to be: [privateMessagesAux]",{"range":"87","text":"88"},[981,983],"[messagesAux]",[1322,1324],"[privateMessagesAux]"]